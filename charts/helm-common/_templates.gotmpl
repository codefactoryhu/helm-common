{{ define "extra.instruction" -}}
Code Factory's `helm-common` is a **developer friendly DevOps solution** to **deploy** any application or service into **Kubernetes**. It's based on inidustrial standards and contains many years of experience developing and shipping real life services. It highly supports microservice architecture and semantic versioning. The template system of `helm-common` is a really powerfool tool, which allows you to ship your products even faster. 

Code Factory's `helm-common` is a very good place to start your jurney with Kubernetes and Helm, or if you want to have a standardized deployment solution.

If you have any question about this tool, or if you have any suggestion how to improve it, open a new issue or PR, and let's discuss it!

Happy helming!

## Usage
**Create a new project**

To use helm-common you need a separate project for managing your micro services with helm. Let's call it `helm`. 

In order to maximize the power of `helm-common` we recommend to use a similar folder structure like this. 
```
project_name/
  charts/
    ms1/
      templates/
        deployment.yaml
        ...
      Chart.yaml
      values.yaml
    ms2/
    ...
  templates/
    ingress.yaml
    secret.yaml
    ...
  Chart.yaml
  values.yaml
.gitignore
.releaserc.yaml
.gitlab-ci.yaml
values-dev.yaml
values-test.yaml
values-prod.yaml
```

Set as dependency for a new or an existing chart:
```
# project_name/Chart.yaml
...
dependencies:
- name: "helm-common"
  version: {{ template "chart.version" . }}
  repository: "@arti_internal" # or "https://domain.tld/artifactory/helm-virtual"
...
```

@arti_internal should be added as a helm repo:

`helm repo add @arti_internal https://domain.tld/artifactory/helm-virtual`

Now you can include the following templates in your template yaml files and configure their behaviour with the `values.yaml`:
#### configmap.yaml
```
{{"{{-"}} template "common.app-env-configmap" . {{"-}}"}}
# configmap for environment variables in your deployment
```

#### deployment.yaml
```
{{"{{-"}} template "common.deployment" . {{"-}}"}}
# deployment for your microservice
```

#### ingress.yaml
```
{{"{{-"}} template "common.ingress" . {{"-}}"}}
# ingress for your services
```

#### secret.yaml
```
{{"{{-"}} template "common.app-env-secret" . -{{"-}}"}}
# secret for environment variables in your deployment
```

#### service.yaml
```
{{"{{-"}} template "common.service" . {{"-}}"}}
# service for your deployment
```

#### cronjob.yaml
```
{{"{{-"}} template "common.cronjob" . {{"-}}"}}
# cronjob for your microservice
```

## Roles of the files
- root level values-*.yaml files contain the envionment specific values, like evironment variables, ingress config, etc.
- project_name/Chart.yaml contains the ubrella chart info about the project. 
```yaml
apiVersion: v2
appVersion: 1.0.1
description: Some description
name: project_name
type: application
version: 1.0.1
dependencies:
  - name: helm-common
    version: 1.0.0
    repository: "@arti_internal"
  - name: ms1
    version: ">=0.0.0-0"
  - name: ms2
    version: ">=0.0.0-0"
```
- `project_name/values.yaml` contains the project related values, like ingress config, resource allocations, imagePullSecrets, stb.
- `project_name/templates` folder contains yaml files, which uses `helm-common` templates. See above. 
- `project_name/charts` folder contains the micro service configurations
- `project_name/charts/templates` similar to `project_name/templates`
- `project_name/chart/values.yaml` contains the values to a specific microservice, eg. resource allocation, secret name, environment variables, images name, version, liveness/readiness settings, etc.
- `project_name/chart/Chart.yaml` contains the chart data of a specific microservice. 
```yaml
apiVersion: v2
appVersion: 1.0.0
description: Some description
name: ms1
type: application
version: 1.0.0
dependencies:
  - name: "helm-common"
    version: 1.0.0
    repository: "@arti_internal"
```

{{- end }}

{{ define "extra.contribution_covenant.badge" -}}
[![Contributor Covenant](https://img.shields.io/badge/Contributor%20Covenant-2.0-4baaaa.svg)](./CODE_OF_CONDUCT.md)
{{- end }}

{{ define "extra.contribution.link" -}}

#### [Contributing](./CONTRIBUTING.md)
{{- end }}
